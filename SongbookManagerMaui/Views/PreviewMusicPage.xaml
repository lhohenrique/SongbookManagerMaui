<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="SongbookManagerMaui.Views.PreviewMusicPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:SongbookManagerMaui.Converters"
    xmlns:resource="clr-namespace:SongbookManagerMaui.Resx"
    Style="{StaticResource BaseContentPage}">

    <ContentPage.Resources>
        <converters:ReverseBoolConverter x:Key="reverseBoolConverter" />
        <ControlTemplate x:Key="RadioMenuTemplate">
            <Grid RowDefinitions="30,4">
                <Label
                    x:Name="TextLabel"
                    HorizontalTextAlignment="Center"
                    Text="{TemplateBinding Content}" />
                <BoxView
                    x:Name="Indicator"
                    Grid.Row="1"
                    Color="Transparent" />
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CheckedStates">
                            <VisualState x:Name="Checked">
                                <VisualState.Setters>
                                    <Setter TargetName="TextLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                    <Setter TargetName="Indicator" Property="BoxView.Color" Value="{StaticResource White}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Unchecked">
                                <VisualState.Setters>
                                    <Setter TargetName="TextLabel" Property="Label.TextColor" Value="Black" />
                                    <Setter TargetName="Indicator" Property="BoxView.Color" Value="Transparent" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </ControlTemplate>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem
            Command="{Binding EditMusicCommand}"
            IconImageSource="edit.png"
            Order="Primary"
            Text="{x:Static resource:AppResources.Edit}" />
        <ToolbarItem
            Command="{Binding RemoveMusicCommand}"
            IconImageSource="delete.png"
            Order="Primary"
            Text="{x:Static resource:AppResources.Delete}" />
        <ToolbarItem
            Command="{Binding TutorialCommand}"
            Order="Secondary"
            Text="{x:Static resource:AppResources.Tutorial}" />
    </ContentPage.ToolbarItems>

    <VerticalStackLayout>
        <Grid Padding="10,10" RadioButtonGroup.GroupName="MenuCategories">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <RadioButton
                Content="{x:Static resource:AppResources.Details}"
                ControlTemplate="{StaticResource RadioMenuTemplate}"
                IsChecked="{Binding IsDetailsChecked}" />
            <RadioButton
                Grid.Column="1"
                Content="{x:Static resource:AppResources.Chords}"
                ControlTemplate="{StaticResource RadioMenuTemplate}"
                IsChecked="{Binding IsChordsChecked}" />
            <RadioButton
                Grid.Column="2"
                Content="{x:Static resource:AppResources.Keys}"
                ControlTemplate="{StaticResource RadioMenuTemplate}"
                IsChecked="{Binding IsKeysChecked}" />
            <RadioButton
                Grid.Column="3"
                Content="{x:Static resource:AppResources.Notes}"
                ControlTemplate="{StaticResource RadioMenuTemplate}"
                IsChecked="{Binding IsNotesChecked}" />
        </Grid>

        <ScrollView x:Name="DetailsScrollView" IsVisible="{Binding IsDetailsChecked, Mode=TwoWay}">
            <StackLayout Padding="10" Spacing="0">
                <StackLayout Orientation="Horizontal">
                    <Label Style="{StaticResource PrimaryLabel}" Text="{Binding Name}" />
                    <Button
                        Command="{Binding PlayMusicCommand}"
                        HeightRequest="40"
                        HorizontalOptions="EndAndExpand"
                        IsVisible="{Binding IsPlayMusicVisible}"
                        Style="{StaticResource MainButton}"
                        Text="{x:Static resource:AppResources.Play}" />
                </StackLayout>
                <Label Style="{StaticResource SecondaryLabel}" Text="{Binding Author}" />

                <Label
                    Margin="0,10,0,0"
                    Style="{StaticResource MediumLabel}"
                    Text="{Binding Lyrics}" />
            </StackLayout>
        </ScrollView>

        <ScrollView x:Name="ChordsScrollView" IsVisible="{Binding IsChordsChecked, Mode=TwoWay}">
            <StackLayout Padding="10" Spacing="20">
                <StackLayout Orientation="Horizontal" Spacing="5">
                    <Label
                        Padding="0,9,0,0"
                        Style="{StaticResource MediumLabel}"
                        Text="{x:Static resource:AppResources.Key}" />
                    <Picker
                        Title="{x:Static resource:AppResources.Key}"
                        Margin="5,0,0,0"
                        HorizontalTextAlignment="Center"
                        ItemsSource="{Binding KeyList}"
                        SelectedItem="{Binding SelectedKey}" />
                </StackLayout>

                <Label Style="{StaticResource MediumLabel}" Text="{Binding Chords}" />
            </StackLayout>
        </ScrollView>

        <StackLayout
            x:Name="KeysLayout"
            IsVisible="{Binding IsKeysChecked, Mode=TwoWay}"
            Spacing="5">
            <Label
                Margin="0,10,0,0"
                Padding="10"
                HorizontalOptions="Center"
                HorizontalTextAlignment="Center"
                IsVisible="{Binding HasSingers, Converter={StaticResource reverseBoolConverter}}"
                Style="{StaticResource SecondaryLabel}"
                Text="{x:Static resource:AppResources.ThereAreNoSingersWithSavedKeysForThisSong}" />

            <ListView
                x:Name="UserListListView"
                HasUnevenRows="True"
                ItemsSource="{Binding UserList, Mode=OneWay}"
                SelectionMode="None"
                SeparatorVisibility="Default">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <StackLayout
                                Padding="10"
                                BackgroundColor="White"
                                Orientation="Horizontal">
                                <Label Style="{StaticResource MediumLabel}" Text="{Binding UserName}" />
                                <Label
                                    HorizontalOptions="EndAndExpand"
                                    Style="{StaticResource MediumLabel}"
                                    Text="{Binding Key}" />
                            </StackLayout>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackLayout>

        <ScrollView
            x:Name="NotesScrollView"
            Padding="10"
            IsVisible="{Binding IsNotesChecked, Mode=TwoWay}">
            <Label
                Padding="10"
                Style="{StaticResource MediumLabel}"
                Text="{Binding Notes}" />
        </ScrollView>
    </VerticalStackLayout>
</ContentPage>